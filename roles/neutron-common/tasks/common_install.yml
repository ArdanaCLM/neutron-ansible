#
# (c) Copyright 2015-2017 Hewlett Packard Enterprise Development LP
# (c) Copyright 2017-2018 SUSE LLC
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
---

- name: neutron-common | common_install |
    Keep first 3 components of RHEL kernel version
  set_fact:
    rh_kern_ver: "{{ ansible_kernel.split('.')[:3] | join('.') }}"
  when: ansible_os_family == 'RedHat'

- name: neutron-common | common_install |
    Override variables for RHEL kernel versions before 3.10.0-514
  include_vars: redhat_pre73.yml
  when: "ansible_os_family == 'RedHat' and rh_kern_ver | version_compare('3.10.0-514', operator='lt')"

- name: neutron-common | common_install | Print running neutron common install
  debug:
    msg:  "Running neutron-common common_install
            for {{ neutron_component | default('neutron-common') }}"
  run_once: true

- name: neutron-common | common_install | Install packages
  become: yes
  package:
    name: "{{ item }}"
    state: present
  with_items:
    required_packages | default([])

- name: neutron-common | common_install | Start openvswitch
  become: yes
  service:
    name: "{{ item }}"
    state: started
    enabled: yes
  with_items:
    required_packages | default([])
  when:
    item == 'openvswitch' and
      (ansible_os_family == 'RedHat' or ansible_os_family == 'Suse')

- name: neutron-common | common_install |
    Wait for ssh connectivity after openvswitch start
  delegate_to: localhost
  wait_for:
    port:  22
    delay: "{{ ovs_ssh_poll_delay }}"
    connect_timeout: "{{ ovs_ssh_connect_timeout }}"
    timeout: "{{ ovs_ssh_timeout }}"
    host: "{{ ansible_ssh_host }}"
  when: (ansible_os_family == 'RedHat' or ansible_os_family == 'Suse')

- name: neutron-common | common_install | RedHat - copy policy file
  become: yes
  copy:
    src: ovsdbserver-selinux-policy.pp
    dest: /tmp/ovsdbserver-selinux-policy.pp
    owner: root
    group: root
    mode: 0640
  when:
    ansible_os_family == 'RedHat'

- name: neutron-common | common_install | RedHat -
         add selinux ovsdb server policy fix
  become: yes
  shell: semodule -i /tmp/ovsdbserver-selinux-policy.pp
  when:
    ansible_os_family == 'RedHat'

# Iterate through current pkg-updates-all fact (from CP) for packages relevant
# to service component.
# Packages relating to each service component are defined in defaults/main
# as required_packages:
# Register the result to be picked up by the service component restart handler.
# TODO use Ardana mechanism to find if required packages got updated
# AND REMOVE THE changed_when: False!!
- name: neutron-common | common_install | Check for updated packages
  shell: echo " dummy command - this needs to be worked out"
  with_items:
    required_packages | default([])
  register: check_updated_packages_result
  changed_when: False
